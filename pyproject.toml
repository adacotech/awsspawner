[tool.black]
line-length = 150
target-version = ['py37']
include = '\.pyi?$'
exclude = '''
(
  /(
    | \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | buck-out
    | build
    | dist
    | docs
  )
)
'''

[tool.isort]
include_trailing_comma = true
line_length = 150
multi_line_output = 3
skip = '''
.git, .tox, .venv, .eggs, build, dist, docs
'''

[tool.poetry]
name = "jupyterhub-awsspawner"
version = "0.0.12"
description = "Spawns JupyterHub single user servers in Docker containers running in AWS ECS Task (include EC2、Fargate、Fargate Spot)"
authors = ["kackyt <t_kaki@nextappli.com>"]
repository = "https://github.com/adacotech/awsspawner"
readme = "README.md"
keywords = ["jupyterhub", "aws", "ecs", "fargate", "boto3"]
license = "MIT"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Framework :: Jupyter",
]
packages = [
  { include = "awsspawner" }
]

[tool.poetry.dependencies]
python = "^3.7"
boto3 = "^1.20.46"
jupyterhub = ">=1.4.1"

[tool.poetry.dev-dependencies]
pytest = "^5.2"
mypy = "^0.931"
flake8 = "^4.0.1"
black = "^22.1.0"
isort = "^5.10.1"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
